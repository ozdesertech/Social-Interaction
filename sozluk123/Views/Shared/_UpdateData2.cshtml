@model sozluk123.Models.baslik

<link href="~/Content/Modal.css" rel="stylesheet" />
<style>
    .modal {
        background: transparent;
        min-height: 1000000px;
    }
</style>
<div class="modal fade" id="AddUpdateModelPopup" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4 class="modal-title" id="AddUpdateModelLabel">Update Records</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @* Hidden filed for storing Id of teacher need to be updated *@

                    @Html.HiddenFor(model => model.ID)
                    <div class="form-group">
                        @Html.LabelFor(model => model.baslik_ismi, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.baslik_ismi, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.baslik_ismi, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.baslik_icerik, htmlAttributes: new { @class = "control-label col-md-4", })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.baslik_icerik, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                            @Html.ValidationMessageFor(model => model.baslik_icerik, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.yazar_id, htmlAttributes: new { @class = "control-label col-md-4", })
                        <div class="col-md-8">
                            @Html.DropDownList("yazar_id", null, htmlAttributes: new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.yazar_id, new { htmlAttributes = new { @class = "form-control", @type = "email" } })*@
                            @Html.ValidationMessageFor(model => model.yazar_id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
            @Html.LabelFor(model => model.kayit_tarih, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.kayit_tarih, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kayit_tarih, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.active, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.active, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.active, "", new { @class = "text-danger" })
            </div>
        </div>*@


                </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnUpdateteacher" onclick="return UpdateTeacher();">Update Teacher</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>



